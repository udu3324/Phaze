:root {
  --gameObjectSize: 3.2vmin;
}

@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap');


.App {
  text-align: center;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: white;
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }

  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }

  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }

  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }

  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

@keyframes shake-up {
  0% {
    transform: translate(0px, 0px)
  }

  50% {
    transform: translate(0px, -4px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-down {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(0px, 4px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-left {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(-4px, 0px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-right {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(4px, 0px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-up-hard {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(0px, -14px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-down-hard {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(0px, 14px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-left-hard {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(-14px, 0px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

@keyframes shake-right-hard {
  0% {
    transform: translate(0px, 0px);
  }

  50% {
    transform: translate(14px, 0px);
  }

  100% {
    transform: translate(0px, 0px);
  }
}

/* link css */
a:link {
  color: #00d9ff;
}

a:visited {
  color: #00d9ff;
}

a:hover {
  color: #00d9ff;
}

a:active {
  color: #00d9ff;
}

/* Up Div Stuff*/

#left,
#middle,
#right {
  display: inline-block;
}

.top-btn {
  font-family: 'JetBrains Mono', monospace;
  color: #ffffff;
  font-size: 1.7rem;
  background: none;
  border: none;
  padding: 0.3rem;
  display: flex;
}

.top-btn:hover {
  background: #00000038;
  border: none;
}

.top-btn:active {
  background-color: #00000086;
}

/* Stopwatch */
.stopwatch {
  font-size: 3rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* Down Div Stuff*/

#down {
  display: inline-block;
}

.down-btn {
  font-family: 'JetBrains Mono', monospace;
  color: #ffffff;
  font-size: 1.9rem;
  background: none;
  border: none;
  padding: 0.3rem;
  display: flex;
  border-radius: 3rem;
  margin: 0.3rem;
}

.control-btn {
  color: #ffffff;
  font-size: 2.5rem;
  background: none;
  border: none;
  border-radius: 3rem;
  height: 2.5rem;
  width: 2.5rem;
  padding: 0rem;
}

div#space {
  padding-left: 1rem;
}

button#up-btn:active,
button#down-btn:active,
button#left-btn:active,
button#right-btn:active {
  background-color: #00000086;
}

.down-btn:hover {
  background: #00000038;
  border: none;
}

.down-btn:active {
  background-color: #00000086;
}

.down-div {
  display: inherit;
}

/* tysm https://stackoverflow.com/a/53375498/16216937 */

#controller {
  padding-top: 1rem;
  display: grid;
  grid-template-areas: "l space r";
}

#controller>div[grid^="space"] {
  grid-area: space;
}

#controller>div[grid^="tool"] {
  grid-area: r;
}

#controller>div[grid^="dpad"] {
  grid-area: l;
}

#controller>.dpad {
  display: grid;
  grid-template-areas: ".     header     ."
    "main      .     right"
    ".     footer     .";
}

#controller>.dpad>button[game-btn^="KEY_UP"] {
  grid-area: header;
}

#controller>.dpad>button[game-btn^="KEY_LEFT"] {
  grid-area: main;
}

#controller>.dpad>button[game-btn^="KEY_RIGHT"] {
  grid-area: right;
}

#controller>.dpad>button[game-btn^="KEY_DOWN"] {
  grid-area: footer;
}

/* Game */
#maze-canvas {
  line-height: 0rem;
}

.overlay-p {
  margin-bottom: 1rem;
}

.o,
.missing,
.w,
.s,
.f,
.v,
.x {
  height: var(--gameObjectSize);
  width: var(--gameObjectSize);
  float: left;
}

.o {
  background-color: #ffffff;
}

.w {
  background-color: #000000;
}

.s {
  background-color: #ff0000;
}

.f {
  background-color: #4cff00;
}

.v {
  background-color: #808080;
}

.missing {
  background-color: #00d9ff;
}

.x {
  background: linear-gradient(to top, #ff0000, #ff0000);
  animation: animate 5s linear infinite;
}

@keyframes animate {

  0%,
  100% {
    filter: hue-rotate(0deg);
  }

  50% {
    filter: hue-rotate(360deg);
  }
}

div#maze {
  position: relative;
  user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
  box-shadow: 0px 0px 17px 1px #1d1f26;
}

.maze-overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-color: #000000a1;
  box-sizing: border-box;
  padding: 10%;
  z-index: 1;
  transition: 0.3s ease;
  text-align: left;
  backdrop-filter: blur(0.5rem);
  font-size: 3.6vmin;
}

div#ran-out-of-time {
  display: none
}

div#finished {
  display: none
}

/* Config */
.config-div {
  display: none;
}

.config-box {
  width: 39vh;
  color: #ffffff;
  background: #16181c;
  padding: 1.3rem;
  border-radius: 1rem;
  text-align: left;
  font-size: 1.3rem;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  z-index: 2;
}

input[type="number" i] {
  font-family: 'JetBrains Mono', monospace;
  width: 5rem;
  text-align: center;
  border: 2px solid #ffffff;
  background-color: #323740;
  color: #ffffff;
  border-radius: 3px 0px 0px 3px;
}

button.conf-btn {
  font-family: 'JetBrains Mono', monospace;
  color: #ffffff;
  background: #323740;
  border-color: #ffffff;
  border-style: solid;
}

button.conf-btn:hover {
  background: #21242b;
}

button.conf-btn:active {
  background: #1b1d22;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

/* The container */
.container {
  display: block;
  position: relative;
  padding-left: 2.4rem;
  cursor: pointer;
  font-size: 1.2rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 1.5rem;
  width: 1.5rem;
  background-color: #eee;
  border-radius: 0.4rem;
}

/* On mouse-over, add a grey background color */
.container:hover input~.checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked~.checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 0.5rem;
  top: 0.2rem;
  width: 0.3rem;
  height: 0.6rem;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Start Stuff */
.start-div {
  display: none;
}

.start-box {
  color: #ffffff;
  background: #16181c;
  border-radius: 1rem;
  text-align: left;
  position: absolute;
  top: 50%;
  left: 50%;
  -moz-transform: translateX(-50%) translateY(-50%);
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
  z-index: 2;
  width: 37vh;
}

.start-box-top {
  padding: 1.5rem 1.5rem 0.8rem 1.5rem;
  display: flex;
  background: #363b46;
  border-radius: 1rem;
}

.start-box-bottom {
  padding: 0.75rem 1.5rem 1.5rem;
  font-size: 2vmin;
}

.config-section {
  margin-bottom: 1rem;
}

#x {
  background: #363b46;
  color: white;
  border-radius: 1rem;
  font-size: 2.5rem;
  font-family: inherit;
  border-style: none;
  padding-left: 1rem;
  padding-right: 1rem;
  margin-left: auto;
  margin-right: 0;
}

.github-repo {
  margin-top: 1rem;
  border-radius: 3rem;
}

.title {
  font-weight: bold;
  font-size: 2.5rem;
  margin: 0px 0px 5px 0px;
}

/* Remove Focus */
textarea:focus,
input:focus,
button:focus {
  outline: none;
}

@media only screen and (max-device-width: 512px) {
  .up-redo-btn {
    grid-area: left;
  }

  .up-time {
    grid-area: middle;
  }

  .up-config-btn {
    grid-area: right;
  }

  .up-div {
    display: grid;
    grid-template-areas:
      'left . . right'
      'middle middle middle middle';
  }
}